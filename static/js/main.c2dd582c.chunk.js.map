{"version":3,"sources":["data.js","components/Logo.js","components/Sidebar.js","components/ActionButtons.js","components/Utils.js","components/Account.js","components/MainContent.js","components/Notif.js","components/CreateAccountPage.js","components/Dashboard.js","components/LoginPage.js","components/BudgetApp.js","components/ClientDashboard.js","components/Authenticate.js","App.js","reportWebVitals.js","index.js"],"names":["DATA","email","password","fullname","number","balance","isAdmin","transactions","type","budget","title","amount","Logo","id","className","Sidebar","props","user","logoutHandler","changePage","page","menu","ClientMenu","onClickHandler","active","icon","text","SideMenu","SideLink","onClick","event","preventDefault","href","ActionButtons","editingUser","setEditingUser","index","setEditModal","setDeleteUser","actionType","actionType2","ActionButton","e","click","formatNumber","toLocaleString","undefined","maximumFractionDigits","trim","parseFloat","replace","findAccount","users","JSON","parse","localStorage","getItem","saveBudgetToDB","accountNumber","newBudget","filteredUsers","filter","dbUser","push","addUserToUsers","setItem","stringify","Account","action","AccountHolder","AccountType","AccountNumber","AccountBalance","MainContent","useState","isCurrentUserAdmin","setIsCurrentUserAdmin","useEffect","localUser","bankAccounts","map","Notif","style","message","CreateAccountPage","createRandomAccount","Math","floor","random","notif","setNotif","initialBalance","setInitialBalance","initialAccountNumber","setInitialAccountNumber","onSubmit","target","elements","emptyInputs","Object","values","input","localUsers","alreadyExists","forEach","row","length","unshift","setUsers","createNewAccount","value","accountType","htmlFor","autoComplete","name","disabled","onChange","Dashboard","setPage","deleteUser","editModal","isUpdate","setIsUpdate","newAccount","setNewAccount","changePageHandler","pageName","modal","accountName","setIsUpdate2","AccountEditModal","account","setAccount","console","log","LoginPage","username","setUsername","setPassword","loginHandler","BudgetApp","client","budgetList","setBudgetList","AccountName","isModalOpen","setIsModalOpen","modalValue","setModalValue","modalAction","setModalAction","getTotalExpenses","reduce","prev","curr","totalExpenses","currentBalance","setCurrentBalance","editRow","saveBudget","newBudgetList","updateBudget","total","item","filteredBudget","budgetIndex","deleteRow","class","BudgetModal","defaultValue","ClientDashboard","logout","setClient","currentUser","Authenticate","isLoggedIn","setIsLoggedIn","setIsAdmin","clients","removeItem","isFound","isLoginSuccess","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2dd582c.chunk.js","sourcesContent":["const DATA = [\n    {\n        email: \"jao@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Joshua Turingan\",\n        number: \"47290539480\",\n        balance: 1000,\n        isAdmin: false, \n        transactions: []\n    },\n    {\n        email: \"veejay@gmail.com\",\n        password: \"abc123\",\n        fullname: \"Veejay Guibone\",\n        type: \"Savings Account\",\n        number: \"47290539481\",\n        balance: 1029300.43,\n        isAdmin: true, \n        transactions: []\n    },\n   \n    {\n        email: \"user5.gmail.com\",\n        password: \"password5\",\n        fullname: \"Taylor Swift\",\n        type: \"Savings Account \",\n        number: \"47290539482\",\n        balance: 392830.22,\n        isAdmin: false, \n        budget: [\n            {\n                title: \"Red Album Concert\",\n                amount: 12000\n            },\n            {\n                title: \"Make-up fee\",\n                amount: 4000\n            }\n        ],     },\n    {\n        email: \"user4@gmail.com\",\n        password: \"password4\",\n        fullname: \"Jack Sparrow\",\n        type: \"Savings Account\",\n        number: \"47290539483\",\n        balance: 1000,\n        isAdmin: false, \n        transactions: []\n    },\n    {\n        email: \"user3@gmail.com\",\n        password: \"password3\",\n        fullname: \"Britney Spears\",\n        type: \"Checking Account\",\n        number: \"47290539484\",\n        balance: 837495.38, \n        isAdmin: false, \n        transactions: []\n    },\n\n    {\n        email: \"user2@gmail.com\",\n        password: \"password2\",\n        fullname: \"Ellen Degeneres\",\n        type: \"Checking Account\",\n        number: \"47290539485\",\n        balance: 574839.58, \n        isAdmin: false, \n        transactions: []\n    },\n    {\n        email: \"user1@gmail.com\",\n        password: \"password1\",\n        fullname: \"Ellon Musk\",\n        type: \"Savings Peso\",\n        number: \"47290539486\",\n        balance: 10000,\n        isAdmin: false, \n        transactions: []\n    }\n];\n\nexport default DATA;\n","import React from \"react\";\n\nexport const Logo = () => {\n    return(\n        <h1 id=\"logo\"><i className='bx bxs-donate-heart' ></i> MockingJay Bank</h1>\n    )\n}\n","import React from 'react';\nimport { Logo } from './Logo';\n\nexport const Sidebar = (props) => {\n    const { user, logoutHandler, changePage, page } = props;\n    let menu = null;\n\n    // not regular user but an admin\n    if(!user) {\n        menu = <SideMenu changePage={changePage} page={page} logoutHandler={logoutHandler} />;\n    }\n\n    // regular user\n    if(user) {\n        menu = <ClientMenu changePage={changePage} page={page} logoutHandler={logoutHandler} />\n    }\n\n    return(\n        <section id=\"side-menu\">\n            <Logo />\n            {menu}\n        </section>\n    )\n}\n\nexport const ClientMenu = (props) => {\n    const {changePage, logoutHandler, page} = props;\n\n    return (\n        <ul>\n      \n            <SideLink onClickHandler={logoutHandler} active={page} icon=\"bx bx-log-out\" text=\"Logout\" />\n        </ul>\n    )\n}\n  \nexport const SideMenu = (props) => {\n    const {changePage, logoutHandler, page} = props;\n    return (\n        <ul>\n            <SideLink onClickHandler={changePage} active={page} page=\"home\" icon=\"bx bx-home\" text=\"Home\" />\n            <SideLink onClickHandler={changePage} active={page} page=\"create-account\" icon=\"bx bx-user-pin\" text=\"Create Account\" />\n            <SideLink onClickHandler={logoutHandler} active={page} icon=\"bx bx-log-out\" text=\"Logout\" />\n        </ul>\n    )\n}\n  \nexport const SideLink = (props) => {\n    const {icon, text, page, active} = props;\n    \n    function clickLink(event) {\n        if(page) {\n            event.preventDefault();\n            props.onClickHandler(page);\n        } else {\n            event.preventDefault();\n            props.onClickHandler();\n        }\n    }\n\n    return (\n        <li><a onClick={clickLink} className={ active === page ? 'active' : '' } href=\"#\"><i className={icon} ></i> {text}</a></li>\n    )\n}\n","import React from \"react\";\n\nexport const ActionButtons = (props) => {\n    const {editingUser, setEditingUser, index, setEditModal, setDeleteUser} = props;\n\n    return (\n      <div id=\"actions\">\n        <ActionButton \n          icon=\"bx bx-edit\" \n          text=\"Edit\" \n          index={index} \n          actionType=\"edit\"\n          editingUser={editingUser} \n          actionType2='edit' \n          setEditingUser={setEditingUser} setEditModal={setEditModal} />\n\n        <ActionButton \n          icon=\"bx bxs-x-square\"  \n          index={index} \n          actionType='delete'\n          text=\"Delete\" editingUser={editingUser} \n          setDeleteUser={setDeleteUser} />\n      </div>\n    )\n  }\n  \nexport const ActionButton = (props) => {\n    const {icon, text, editingUser, actionType, setEditingUser, index, setEditModal, setDeleteUser} = props;\n\n    const click = (e, index) => {\n      e.preventDefault();\n      \n      if(actionType === 'edit') {\n        setEditingUser(index);\n        setEditModal(true);\n      }\n\n      if(actionType === 'delete') {\n        setDeleteUser(index);\n      }\n    }\n\n    return (\n      <button onClick={(e) => click(e, index)}><i className={icon} ></i> {text}</button>\n    )\n  }\n","export function formatNumber(number) \n{\n    return number.toLocaleString(undefined, {maximumFractionDigits: 2});\n}\n\nexport function trim(number) {\n    return parseFloat(number.replace(/,/g, '')) || 0;\n}\n\nexport function findAccount(number) {\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    for(const user of users) {\n        if(user.number === number) {\n            return user;\n        }\n    }\n\n    return false;\n}\n\nexport function transact(number, amount, type, setUsers=null)\n{\n    let multiplier = 1;\n    if(type === 'add' || type === 'credit') multiplier = 1;\n    if(type === 'subtract' || type === 'debit') multiplier = -1;\n\n    const users = JSON.parse(localStorage.getItem('users'));\n    \n    for(const user of users) {\n        if(user.number === number) {\n            user.balance += amount * multiplier;\n\n            if(type === 'add' || type === 'credit') {\n                user.transactions.unshift({\n                    title: `Deposit`, \n                    amount: amount, \n                    type: \"credit\", \n                    date: getDateToday()\n                })\n            }\n\n            if(type === 'subtract' || type === 'debit') {\n                user.transactions.unshift({\n                    title: `Withdraw`, \n                    amount: amount, \n                    type: \"debit\", \n                    date: getDateToday()\n                })\n            }\n        }\n    }\n    setUsers(users);\n    localStorage.setItem('users', JSON.stringify(users));\n}\n\nexport function capitalize(str) \n{\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function saveBudgetToDB(accountNumber, newBudget) \n{\n    const user = findAccount(accountNumber);\n    user.budget = newBudget;\n    const filteredUsers = addUserToUsers(user);\n    localStorage.setItem('users', JSON.stringify(filteredUsers));\n}\n\n\n\nfunction addUserToUsers(user) {\n    const users = JSON.parse(localStorage.getItem('users'));\n\n    const filteredUsers = users.filter(dbUser => {\n        return dbUser.number !== user.number;\n    });\n\n    filteredUsers.push(user);\n    return filteredUsers;\n}\n\nexport function getDateToday() {\n    const transDate = new Date();\n    return `${transDate.toLocaleString(\"en-us\", { month: \"long\" })} ${transDate.getDay()}, ${transDate.getFullYear()}`;\n}\n","import React from \"react\";\nimport { ActionButtons } from \"./ActionButtons\";\nimport { formatNumber } from \"./Utils\";\n\nexport const Account = (props) => {\n    \n    const {type, accountNumber, balance, fullname, editingUser, setEditingUser, setDeleteUser, index, isAdmin, setEditModal} = props;\n    \n    const action = isAdmin ? <ActionButtons index={index} \n      editingUser={editingUser} \n      setEditingUser={setEditingUser} \n      setEditModal={setEditModal} setDeleteUser={setDeleteUser} /> : '';\n    \n    return (\n      <div className=\"account\">\n          <div className=\"details\">\n              <AccountHolder fullname={fullname} />\n              <AccountType type={type} />\n              <AccountNumber accountNumber={accountNumber} />\n              {action}\n          </div>\n          <AccountBalance balance={formatNumber(balance)} />\n      </div>\n    )\n  }\n  \nexport const AccountHolder = (props) => {\n    return (\n      <h1>{props.fullname}</h1>\n    )\n  }\n  \n  \nexport const AccountType = (props) => {\n    return (\n      <h3>{props.type}</h3>\n    )\n  }\n  \n  \nexport const AccountNumber = (props) => {\n    return (\n      <div>{props.accountNumber}</div>\n    )\n  }\n  \n  \nexport const AccountBalance = (props) => {\n    const balance = props.balance;\n    return (\n      <div className=\"balance\">{balance}</div>\n    )\n  }\n\n","import { Account } from \"./Account\";\nimport React, { useEffect, useState } from \"react\";\n\nexport const MainContent = (props) => {\n    const users = props.users;\n    const {editingUser, setEditingUser, setEditModal, setDeleteUser} = props;\n    const [isCurrentUserAdmin, setIsCurrentUserAdmin] = useState(false);\n\n    useEffect(() => {\n      const localUser = JSON.parse(localStorage.getItem('currentUser'));\n      setIsCurrentUserAdmin(localUser.isAdmin);\n    }, [isCurrentUserAdmin]);\n    \n    const bankAccounts = users.map((user, index) => {\n      return <Account key={index} index={index} fullname={user.fullname} \n        type={user.type} \n        isAdmin={isCurrentUserAdmin} \n        accountNumber={user.number} \n        balance={user.balance} \n        editingUser={editingUser} \n        setEditingUser={setEditingUser} setEditModal={setEditModal} \n        setDeleteUser={setDeleteUser} />\n    });\n      \n    return (\n      <section id=\"main-content\">\n        {bankAccounts}\n      </section>\n    )\n    \n  }\n\n","export const Notif = (props) => {\n    return <div className={`notif ${props.style}`}>{props.message}</div>\n}\n","import { useState } from \"react\";\nimport { Notif } from \"./Notif\";\nimport {formatNumber, trim} from './Utils';\n\nexport const CreateAccountPage = (props) => {\n    const createRandomAccount = () => {\n        return Math.floor(1000000000 + Math.random() * 9000000000);\n    }\n    \n    const [notif, setNotif] = useState({message: 'Create a new client account.', style: 'left'});\n    const [initialBalance, setInitialBalance] = useState(0);\n    const [initialAccountNumber, setInitialAccountNumber] = useState(createRandomAccount());\n\n    const createNewAccount = (user) => {\n\n        const emptyInputs = Object.values(user).filter(input => {\n            return input === ''\n        });\n\n        const localUsers = props.users;\n\n        let alreadyExists = false;\n        localUsers.forEach(row => {\n            if(row.email === user.email) {\n                alreadyExists = true;\n            }\n        });\n\n        if(alreadyExists) {\n            setNotif({message: 'This email already exists. Try again.', style: 'danger'});\n            return false;\n        } else if(emptyInputs.length > 0) {\n            setNotif({message: 'All fields are required.', style: 'danger'});\n            return false;\n        } else {\n            setNotif('');\n            localUsers.unshift(user);\n            props.setUsers(localUsers); \n            localStorage.setItem('users', JSON.stringify(localUsers));\n            setNotif({message: 'Successfully saved.', style: 'success'});\n            return true;\n        }\n    }\n\n    const handleCreateAccount = (event) => {\n        event.preventDefault();\n        const user = event.target.elements;\n\n        const account = {\n            email: user.email.value,\n            password: user.password.value,\n            fullname: user.fullname.value,\n            type: user.accountType.value,\n            number: user.accountNumber.value,\n            isAdmin: false,\n            balance: trim(user.initialBalance.value), \n            transactions: []\n        }\n\n        const isSaved = createNewAccount(account);\n        if(isSaved) {\n            user.email.value = '';\n            user.password.value = '';\n            user.fullname.value = ''; \n            user.accountNumber.value = setInitialAccountNumber(createRandomAccount());\n            user.initialBalance.value = setInitialBalance(0);\n        }\n    }\n\n    const onInitialBalance = event => {\n        const amount = trim(event.target.value) || 0;\n        setInitialBalance(amount);\n    }\n\n    return (\n        <section id=\"main-content\">\n            <form id=\"form\" onSubmit={handleCreateAccount}>\n                <h1>Create Account</h1>\n                <Notif message={notif.message} style={notif.style} />\n                <label htmlFor=\"fullname\">Full name</label>\n                <input id=\"fullname\" type=\"text\" autoComplete=\"off\" name=\"fullname\" />\n                <hr />\n                <label htmlFor=\"account-number\">Account # (Randomly Generated)</label>\n                <input id=\"account-number\" name=\"accountNumber\" className=\"right\" value={initialAccountNumber} type=\"number\" disabled />\n\n                <label htmlFor=\"balance\">Initial balance</label>\n                <input id=\"balance\" type=\"text\" value={formatNumber(initialBalance)} onChange={onInitialBalance} name=\"initialBalance\" className=\"right\" />\n\n                <label htmlFor=\"account-type\">Account Type</label>\n                <select name=\"accountType\">\n                    <option value=\"Checking Account\">Checking Account</option>\n                    <option value=\"Savings Accounts\">Savings Account</option>\n                </select>\n                <hr />\n                <label htmlFor=\"email\">Email Address</label>\n                <input id=\"email\" type=\"email\" name=\"email\" />\n                <label htmlFor=\"password\">Password</label>\n                <input id=\"password\" type=\"password\" name=\"password\" />\n                <input value=\"Create Account\" className=\"btn\" type=\"submit\" />\n            </form>\n        </section>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { MainContent } from \"./MainContent\";\nimport { CreateAccountPage } from \"./CreateAccountPage\";\n///import { TransferPage } from \"./TransferPage\";\n////import { TransactPage } from \"./TransactPage\";\n\nexport const Dashboard = (props) => {\n    const [page, setPage] = useState('home');\n    const [users, setUsers] = useState(props.users);\n    const [notif, setNotif] = useState({message: '', style: ''});\n    const [editingUser, setEditingUser] = useState(null);\n    const [deleteUser, setDeleteUser] = useState(null);\n    const [editModal, setEditModal] = useState(false);\n    const [isUpdate, setIsUpdate] = useState(false); \n    const [newAccount, setNewAccount] = useState(null); \n\n    const changePageHandler = (pageName) => {\n        setPage(pageName);\n\n        if(pageName === 'withdraw') {\n            setNotif({message: 'Select an account to withdraw money from.', style: 'left'});\n        } \n\n        if(pageName === 'deposit') {\n            setNotif({message: 'Select an account to deposit money.', style: 'left'});\n        }\n    }\n\n    useEffect(() => {\n        if(deleteUser !== null) {\n\n            const filteredUsers = users.filter((user, index) => {\n                return index !== deleteUser\n            });\n\n            setUsers(filteredUsers);\n            setDeleteUser(null);\n            // save\n            localStorage.setItem('users', JSON.stringify(filteredUsers));\n        }\n    }, [deleteUser]);\n\n    useEffect(() => {\n        if(isUpdate) {\n            const filteredUsers = users.map((user, index) => {\n                if(user.number === newAccount.number) {\n                    user = {...user, ...newAccount};\n                }\n                return user;\n            });\n\n            setUsers(filteredUsers);\n            setIsUpdate(false);\n            // save\n            localStorage.setItem('users', JSON.stringify(filteredUsers));\n        }\n    }, [isUpdate]);\n\n    let modal = null;\n    if(editingUser !== null && editModal) {\n        const user = users[editingUser];\n        // accountName={} accountNumber={} balance={}\n        modal = <AccountEditModal \n            accountName={user.fullname} \n            accountNumber={user.number} \n            balance={user.balance} setEditModal={setEditModal} \n            setIsUpdate={setIsUpdate} setNewAccount={setNewAccount} setIsUpdate2={setIsUpdate}  />\n    }\n\n    if(page === 'home') {\n        return (\n            <main>\n              <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\n              <MainContent users={users} editingUser={editingUser} \n                setEditModal={setEditModal} \n                setEditingUser={setEditingUser} setDeleteUser={setDeleteUser} />\n              {modal}\n            </main>\n        )\n    }\n\n    if(page === 'create-account') {\n        return (\n            <main>\n              <Sidebar changePage={changePageHandler} page={page} logoutHandler={props.logoutHandler} />\n              <CreateAccountPage users={users} setUsers={setUsers} />\n            </main>\n        )\n    }\n\n    \n}\n\nconst AccountEditModal = (props) => {\n    const { accountName, accountNumber, balance, setEditModal, setNewAccount, setIsUpdate } = props;\n    const [account, setAccount] = useState({fullname: accountName, number: accountNumber, balance: balance});\n\n    const closeModal = () => {\n        setEditModal(false);\n    }\n\n    const updateAccount = (e) => {\n        e.preventDefault();\n        console.log(\"Update\");\n        setNewAccount(account);\n        setIsUpdate(true);\n        // close modal\n        setEditModal(false);\n    }\n\n    const editAccountName = (e) => {\n        const name = e.target.value;\n        setAccount({...account, ...{fullname: name}});\n    }\n\n    const editAccountNumber = (e) => {\n        const number = e.target.value;\n        setAccount({...account, ...{number: number}});\n    }\n\n    const editAccountBalance = (e) => {\n        const balance = e.target.value;\n        setAccount({...account, ...{balance: parseFloat(balance) || 0}});\n    }\n \n    return (\n        <div className=\"overlay\">\n        <div className=\"modal\">\n            <form onSubmit={updateAccount}>\n                <h2 className=\"title\">Edit Account</h2>\n                <label>Account name</label>\n                <input name=\"account-name\" onChange={editAccountName} value={account.fullname} autoComplete=\"off\" />\n                \n                <label>Account number</label>\n                <input type=\"text\" name=\"amount\" onChange={editAccountNumber} disabled value={account.number} autoComplete=\"off\" />\n\n                <label>Balance</label>\n                <input type=\"text\" name=\"balance\" onChange={editAccountBalance} value={account.balance} autoComplete=\"off\" />\n\n                <button type=\"button\" onClick={() => closeModal()} className=\"btn2 btn-muted\">Cancel</button>\n                <button type=\"submit\" className=\"btn2\">Update Account</button>\n            </form>\n        </div>\n    </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Logo } from './Logo';\nimport { Notif } from './Notif';\n\nexport const LoginPage = (props) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n  \n    const onSubmitHandler = (event) => {\n      event.preventDefault();\n      props.loginHandler(username, password);\n    }\n  \n    const onChangeUsername = (event) => {\n      setUsername(event.target.value);\n    }\n  \n    const onChangePassword = (event) => {\n      setPassword(event.target.value);\n    }\n  \n    return (\n      <div id=\"login-page\">\n        <div id=\"login\">\n          <Logo />\n          <Notif message={props.notif.message} style={props.notif.style} />\n          <form onSubmit={onSubmitHandler}>\n            <label htmlFor=\"username\">Username</label>\n            <input id=\"username\" autoComplete=\"off\" onChange={onChangeUsername}  value={username} type=\"text\" />\n            <label htmlFor=\"password\">Password</label>\n            <input id=\"password\" autoComplete=\"off\" onChange={onChangePassword} value={password} type=\"password\" />\n            <button type=\"submit\" className=\"btn\">Login</button>\n          </form>\n        </div>\n      </div>\n    )\n}\n","import { formatNumber, saveBudgetToDB } from \"./Utils\";\nimport React, {useState} from \"react\";\n\nexport const BudgetApp = (props) => {\n    const {client} = props;\n    const [budgetList, setBudgetList] = useState(client.budget || []);\n    const [AccountName, setAccountName] = useState(client.fullname || []);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [modalValue, setModalValue] = useState({title: '', amount: ''});\n    const [modalAction, setModalAction] = useState('add');\n\n    const getTotalExpenses = () => {\n        return budgetList.reduce((prev, curr) => {\n            return prev + curr.amount;\n        }, 0);\n    }\n\n    const totalExpenses = getTotalExpenses();\n    \n    const [currentBalance, setCurrentBalance] = useState(client.balance - totalExpenses);\n\n    const addBudget = (e) => {\n        e.preventDefault();\n        setModalValue({title: '', amount: ''});\n        setModalAction('add');\n        setIsModalOpen(true);\n    }\n\n    const saveBudget = (amount, title) => {\n        amount = parseFloat(amount);\n        if(amount > 0) {\n            // deduct current balance\n            setCurrentBalance(currentBalance - amount);\n            // add this budget to budgetList\n            const newBudgetList = [{title: title, amount: amount}, ...budgetList];\n            setBudgetList(newBudgetList);\n            // close\n            setIsModalOpen(false);\n            // save into localStorage this new budget\n            saveBudgetToDB(client.number, newBudgetList);\n        }\n    }\n\n    const updateBudget = ({id, amount, title}) => {\n        const budget = budgetList[id];\n        budget.title = title;\n        budget.amount = amount;\n\n        setBudgetList(budgetList);\n        saveBudgetToDB(client.number, budgetList);\n        const total = getTotalExpenses(budgetList);\n        // compute total balance\n        setCurrentBalance(client.balance - total);\n        setIsModalOpen(false);\n    }\n\n    const editRow = (index) => {\n        const budget = budgetList[index];\n        budget.id = index;\n\n        setModalValue(budget);\n        setModalAction('edit');\n        setIsModalOpen(true);\n    }\n\n    const deleteRow = (index) => {\n        // get all budgetlist except the index\n        const filteredBudget = budgetList.filter((item, budgetIndex) => {\n            return  index !== budgetIndex;\n        })\n\n        setCurrentBalance(currentBalance + budgetList[index].amount);\n        setBudgetList(filteredBudget);\n        saveBudgetToDB(client.number, filteredBudget);\n    }\n\n    const modal = isModalOpen ? <BudgetModal \n                  title={modalValue.title}\n                  id={modalValue.id}\n                  amount={modalValue.amount}\n                  modalAction={modalAction} \n                  setIsModalOpen={setIsModalOpen}\n                  saveBudget={saveBudget} \n                  updateBudget={updateBudget} /> : '';\n\n\n    const budget = budgetList.map((item, index) => {\n        const style = index % 2 === 0 ? 'even' : 'odd';\n        return (\n            <div className={`budget-row ${style}`}>\n                <div className=\"budget-title\">\n                    <button type=\"button\" onClick={() => deleteRow(index)} className=\"mr\"><i class='bx bxs-x-square' ></i></button>\n                    <button type=\"button\" onClick={() => editRow(index)} className=\"mr\"><i class='bx bx-edit-alt' ></i></button>\n                    <span onClick={() => editRow(index)}>{item.title}</span>\n                </div>\n                <div>{formatNumber(item.amount)}</div>\n            </div>\n        )\n    })\n\n    return (\n        <div id=\"main-content\">\n            <form id=\"form\" className=\"budget\">\n                <h1>Welcome, {AccountName}! </h1>\n          \n                <div>Plan  and forsee your expenses using our Budget App.</div>\n\n                <div id=\"budget\">\n                    <div className=\"budget-menu\">\n                        <div>\n                            <button className=\"btn2\" onClick={addBudget}><i className='bx bx-book-add'></i> Add budget</button>\n                        </div>\n                        <div>\n\n                        <label>Alloted Budget</label>\n                          <h1>${formatNumber(client.balance)}</h1>\n\n                        <label>Total Expense</label>\n                          <h1> ${formatNumber(totalExpenses)}</h1>\n\n                          <label>Remaining Budget</label>\n                          <h1 className={ currentBalance < 0 ? 'danger' : '' }>${formatNumber(currentBalance)}</h1>\n\n                        </div>\n                    </div>\n\n                    <div className=\"budget-body\">\n                        {budget}\n                    </div>\n                </div>\n            </form>\n            {modal}\n        </div>\n    )\n}\n\nconst BudgetModal = (props) => {\n    const { saveBudget, updateBudget, setIsModalOpen, title, amount, modalAction, id} = props;\n    const [modalValue, setModalValue] = useState({id: id, title: title, amount: amount });\n    // add or edit?\n    const [action, setAction] = useState(modalAction);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if(action === 'add') {\n            saveBudget(modalValue.amount, modalValue.title);\n        }\n\n        if(action === 'edit') {\n            updateBudget(modalValue);\n\n        }\n    }\n\n    const onChangeDescription = (e) => {\n        setModalValue({...modalValue, title: e.target.value});\n    }\n\n    const onChangeAmount = (e) => {\n        setModalValue({...modalValue, amount: parseFloat(e.target.value)});\n    }\n\n    return (<div className=\"overlay\">\n        <div className=\"modal\">\n            <form onSubmit={onSubmit}>\n                <h2 className=\"title\">{action} budget</h2>\n                <label>description</label>\n                <textarea name=\"title\" onChange={onChangeDescription} defaultValue={modalValue.title}></textarea>\n                <label>Amount</label>\n                <input type=\"number\" name=\"amount\" onChange={onChangeAmount} value={modalValue.amount} autoComplete=\"off\" />\n                <button type=\"button\" onClick={() => setIsModalOpen(false)} className=\"btn2 btn-muted\">Cancel</button>\n                <button type=\"submit\" className=\"btn2\">{action} Budget</button>\n            \n            </form>\n        </div>\n    </div>\n    )\n}\n","import React, {useState} from 'react';\nimport { Sidebar } from './Sidebar';\nimport { findAccount } from './Utils';\nimport { BudgetApp } from './BudgetApp';\n\nexport const ClientDashboard = (props) => {\n    const { logout, client, setClient } = props;\n   \n    const [ page, setPage ] = useState('home');\n\n  \n    const changePageHandler = (pageName) => {\n      setPage(pageName);\n      const currentUser = findAccount(client.number);\n      setClient(currentUser);\n    }\n  \n    if(page === 'home') {\n      \n      return (\n        <main>\n        <Sidebar changePage={changePageHandler} page={page} user={client} logoutHandler={props.logout} />\n        <BudgetApp client={client} />\n      </main>\n    )\n      \n    }\n  \n\n}\n","import React, {useState} from 'react';\nimport DATA from '../data';\nimport { Dashboard } from './Dashboard';\nimport { LoginPage } from './LoginPage';\nimport { ClientDashboard } from './ClientDashboard';\n\nexport const Authenticate = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [notif, setNotif] = useState({message: '', style: ''});\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [client, setClient] = useState(null);\n    const localUsers = localStorage.getItem('users');\n    \n    if(!localUsers) {\n      localStorage.setItem('users', JSON.stringify(DATA));\n    }\n\n    const clients = JSON.parse(localStorage.getItem('users'));\n\n    const isLoginSuccess = (email, password) => {\n      let isFound = false;\n\n      clients.forEach(user => {\n        if(user.email === email && user.password === password) {\n          if(user.isAdmin) {\n            setIsAdmin(true);\n            setClient(user);\n            isFound = true;\n          }\n          else {\n            setIsAdmin(false);\n            setClient(user)\n            isFound = true;\n          }\n          setNotif('');\n        }\n      });\n  \n      if(!isFound) setNotif({message: 'Wrong username and password.', style: 'danger'});\n      return isFound;\n    }\n  \n    const login = (username, password) => {\n        if(isLoginSuccess(username, password)) {\n            setIsLoggedIn(true);\n        }\n    }\n  \n    const logout = () => {\n        setIsLoggedIn(false);\n     \n        localStorage.removeItem('client')\n        setNotif({message: 'You have been logged out.', style: 'success'});\n    }\n  \n    if(isLoggedIn) {\n      localStorage.setItem('currentUser', JSON.stringify(client));\n      if(isAdmin) {\n        return <Dashboard users={clients} logoutHandler={logout} />\n      } else {\n        \n        return <ClientDashboard client={client} users={clients} setClient={setClient} logout={logout} />\n      }\n    } else {\n      return <LoginPage loginHandler={login} notif={notif} isLoggedIn={isLoggedIn} />\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { Authenticate } from './components/Authenticate';\n\nfunction App() {\n  return (\n    <Authenticate />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}